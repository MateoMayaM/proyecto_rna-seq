[["index.html", "Proyecto RNA-seq 2022 Sobre el proyecto Estudio seleccionado: SRP112551", " Proyecto RNA-seq 2022 Mateo Maya Martínez. 14 - febrero - 2021 Sobre el proyecto Este proyecto busca poner en práctica los conocimientos adquiridos durante el módulo Análisis de datos de secuenciación masiva del curso Bioinformática y estadística II. Estudio seleccionado: SRP112551 Los datos utilizados para este proyecto fueron obtenidos del estudio Whole-transcriptome brain expression and exon-usage profiling in major depression and suicide. Abstract: Brain gene expression profiling studies of suicide and depression using oligonucleotide microarrays have often failed to distinguish these two phenotypes. Moreover, next generation sequencing approaches are more accurate in quantifying gene expression and can detect alternative splicing. Using RNA-seq, we examined whole-exome gene and exon expression in non-psychiatric controls (CON, N=29), DSM-IV major depressive disorder suicides (MDD-S, N=21) and MDD non-suicides (MDD, N=9) in the dorsal lateral prefrontal cortex (Brodmann Area 9) of sudden death medication-free individuals post mortem. Using small RNA-seq, we also examined miRNA expression (nine samples per group). DeSeq2 identified 35 genes differentially expressed between groups and surviving adjustment for false discovery rate (adjusted P&lt;0.1). In depression, altered genes include humanin-like-8 (MTRNRL8), interleukin-8 (IL8), and serpin peptidase inhibitor, clade H (SERPINH1) and chemokine ligand 4 (CCL4), while exploratory gene ontology (GO) analyses revealed lower expression of immune-related pathways such as chemokine receptor activity, chemotaxis and cytokine biosynthesis, and angiogenesis and vascular development in (adjusted P&lt;0.1). Hypothesis-driven GO analysis suggests lower expression of genes involved in oligodendrocyte differentiation, regulation of glutamatergic neurotransmission, and oxytocin receptor expression in both suicide and depression, and provisional evidence for altered DNA-dependent ATPase expression in suicide only. DEXSEq analysis identified differential exon usage in ATPase, class II, type 9B (adjusted P&lt;0.1) in depression. Differences in miRNA expression or structural gene variants were not detected. Results lend further support for models in which deficits in microglial, endothelial (blood-brain barrier), ATPase activity and astrocytic cell functions contribute to MDD and suicide, and identify putative pathways and mechanisms for further study in these disorder Overall design: We examined whole-exome gene and exon expression in non-psychiatric controls (CON, N=29), DSM-IV major depressive disorder suicides (MDD-S, N=21) and MDD non-suicides (MDD, N=9) in the dorsal lateral prefrontal cortex (Brodmann Area 9) of sudden death medication-free individuals post mortem. Using small RNA-seq, we also examined miRNA expression (nine samples per group). "],["librerías-a-utilizar.html", "1 Librerías a utilizar", " 1 Librerías a utilizar library(&quot;recount3&quot;) library(&quot;edgeR&quot;) library(&quot;limma&quot;) library(&quot;ggplot2&quot;) library(&quot;pheatmap&quot;) "],["datos-a-utilizar..html", "2 Datos a utilizar.", " 2 Datos a utilizar. Descargar los datos de RNA-seq desde el paquete recount3. # Hacer un subset con el estudio con el que vamos a trabajar human_projects &lt;- available_projects() rse_gene_SRP115956 &lt;- create_rse( subset( human_projects, project == &quot;SRP115956&quot; &amp; project_type == &quot;data_sources&quot; ) ) # Convertir las cuentas crudas a cuentas por lectura assay(rse_gene_SRP115956, &quot;counts&quot;) &lt;- compute_read_counts(rse_gene_SRP115956) "],["formateo-de-los-datos..html", "3 Formateo de los datos. 3.1 Variable categórica.", " 3 Formateo de los datos. Podemos observar los atributos que contiene nuestro objeto ahora. head(rse_gene_SRP115956$sra.sample_attributes, 3) ## [1] &quot;age;;44|alcool;;NA|Cause of death;;Suicide|drug type;;NA|drugs;;NA|gender;;female|medication type;;AD|medication;;yes|ph;;6.73|phenotype;;CTRL|pmi;;29.5|rin;;7.3|smoking;;NA|source_name;;postmortem brain|tissue;;Orbitofrontal (OFC; BA11)&quot; ## [2] &quot;age;;29|alcool;;no|Cause of death;;Suicide|drug type;;no|drugs;;no|gender;;male|medication type;;no|medication;;no|ph;;6.96|phenotype;;MDD|pmi;;27|rin;;5.7|smoking;;yes (heavy)|source_name;;postmortem brain|tissue;;Orbitofrontal (OFC; BA11)&quot; ## [3] &quot;age;;68|alcool;;yes|Cause of death;;Suicide|drug type;;no|drugs;;no|gender;;male|medication type;;NA|medication;;NA|ph;;6.93|phenotype;;MDD|pmi;;32|rin;;8.8|smoking;;yes (heavy)|source_name;;postmortem brain|tissue;;Orbitofrontal (OFC; BA11)&quot; Una vez hecho lo anterior, podemos observar que hay varios atributos que contienen espacios en su nombre, si quisiéramos usarlos en el análisis posterior podrían ocasionar algunos problemas, así que los quitaremos. # Reemplazar espacios que podrían ocasionar problemas en varios atributos. rse_gene_SRP115956$sra.sample_attributes &lt;- gsub(&quot;alcool&quot;, &quot;alcohol&quot;, rse_gene_SRP115956$sra.sample_attributes) rse_gene_SRP115956$sra.sample_attributes &lt;- gsub(&quot;Cause of death&quot;, &quot;cause_of_death&quot;, rse_gene_SRP115956$sra.sample_attributes) rse_gene_SRP115956$sra.sample_attributes &lt;- gsub(&quot;drug type&quot;, &quot;drug_type&quot;, rse_gene_SRP115956$sra.sample_attributes) rse_gene_SRP115956$sra.sample_attributes &lt;- gsub(&quot;medication type&quot;, &quot;medication_type&quot;, rse_gene_SRP115956$sra.sample_attributes) # Observar los atributos rse_gene_SRP115956$sra.sample_attributes [1] ## [1] &quot;age;;44|alcohol;;NA|cause_of_death;;Suicide|drug_type;;NA|drugs;;NA|gender;;female|medication_type;;AD|medication;;yes|ph;;6.73|phenotype;;CTRL|pmi;;29.5|rin;;7.3|smoking;;NA|source_name;;postmortem brain|tissue;;Orbitofrontal (OFC; BA11)&quot; Ahora separaremos los objetos y los añadiremos al data frame. # Procesar la información como la provee SRA, expandirla, separar los atributos e incorporarlos al data frame. . rse_gene_SRP115956 &lt;- expand_sra_attributes(rse_gene_SRP115956) colData(rse_gene_SRP115956)[ , grepl(&quot;^sra_attribute&quot;, colnames(colData(rse_gene_SRP115956))) ] ## DataFrame with 263 rows and 15 columns ## sra_attribute.age sra_attribute.alcohol sra_attribute.cause_of_death ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 44 NA Suicide ## SRR5961815 29 no Suicide ## SRR5961816 68 yes Suicide ## SRR5961817 39 no Suicide ## SRR5961818 40 NA Suicide ## ... ... ... ... ## SRR5961995 53 no Suicide ## SRR5961996 39 no Suicide ## SRR5961997 55 yes Accident ## SRR5961998 38 NA Suicide ## SRR5961999 25 NA Suicide ## sra_attribute.drug_type sra_attribute.drugs sra_attribute.gender ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 NA NA female ## SRR5961815 no no male ## SRR5961816 no no male ## SRR5961817 no no male ## SRR5961818 NA NA female ## ... ... ... ... ## SRR5961995 no no male ## SRR5961996 no no male ## SRR5961997 no no male ## SRR5961998 NA NA male ## SRR5961999 NA NA female ## sra_attribute.medication_type sra_attribute.medication ## &lt;character&gt; &lt;character&gt; ## SRR5961814 AD yes ## SRR5961815 no no ## SRR5961816 NA NA ## SRR5961817 AD yes ## SRR5961818 AD yes ## ... ... ... ## SRR5961995 NA NA ## SRR5961996 AD yes ## SRR5961997 no no ## SRR5961998 NA NA ## SRR5961999 NA NA ## sra_attribute.ph sra_attribute.phenotype sra_attribute.pmi ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 6.73 CTRL 29.5 ## SRR5961815 6.96 MDD 27 ## SRR5961816 6.93 MDD 32 ## SRR5961817 6.37 MDD 18.5 ## SRR5961818 6.81 MDD 49.5 ## ... ... ... ... ## SRR5961995 6.91 MDD 33.5 ## SRR5961996 6 MDD 19 ## SRR5961997 6.75 CTRL 24 ## SRR5961998 6.86 MDD 30 ## SRR5961999 6.73 MDD 20 ## sra_attribute.rin sra_attribute.smoking sra_attribute.source_name ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR5961814 7.3 NA postmortem brain ## SRR5961815 5.7 yes (heavy) postmortem brain ## SRR5961816 8.8 yes (heavy) postmortem brain ## SRR5961817 6.8 no postmortem brain ## SRR5961818 7.8 NA postmortem brain ## ... ... ... ... ## SRR5961995 7.7 NA postmortem brain ## SRR5961996 4.9 yes (heavy) postmortem brain ## SRR5961997 4.4 NA postmortem brain ## SRR5961998 7.7 NA postmortem brain ## SRR5961999 8.1 NA postmortem brain ## sra_attribute.tissue ## &lt;character&gt; ## SRR5961814 Orbitofrontal (OFC; .. ## SRR5961815 Orbitofrontal (OFC; .. ## SRR5961816 Orbitofrontal (OFC; .. ## SRR5961817 Orbitofrontal (OFC; .. ## SRR5961818 Orbitofrontal (OFC; .. ## ... ... ## SRR5961995 Nucleus Accumbens (N.. ## SRR5961996 Nucleus Accumbens (N.. ## SRR5961997 Nucleus Accumbens (N.. ## SRR5961998 Nucleus Accumbens (N.. ## SRR5961999 Nucleus Accumbens (N.. Si quisiéramos utilizar algunos de estos atributos, para el análisis posterior, sería conveniente que la información que contienen sea homogénea, así que en los atributos que lo necesiten, se realizarán cambios que lo permitan. # Homegeneizar los datos. rse_gene_SRP115956$sra_attribute.drugs &lt;- gsub(&quot;No&quot;, &quot;no&quot;, rse_gene_SRP115956$sra_attribute.drugs) rse_gene_SRP115956$sra_attribute.alcohol &lt;- gsub(&quot;No&quot;, &quot;no&quot;, rse_gene_SRP115956$sra_attribute.alcohol) Modificaremos los tipos de datos de algunas categorías para poder utilizarlos # Cambiar el tipo de dato de character a factor o numeric. rse_gene_SRP115956$sra_attribute.age &lt;- as.numeric(rse_gene_SRP115956$sra_attribute.age) rse_gene_SRP115956$sra_attribute.phenotype &lt;- factor(rse_gene_SRP115956$sra_attribute.phenotype) rse_gene_SRP115956$sra_attribute.gender &lt;- factor(rse_gene_SRP115956$sra_attribute.gender) # Resumen de las categorías. summary(as.data.frame(colData(rse_gene_SRP115956)[ , grepl(&quot;^sra_attribute.[age|phenotype]&quot;, colnames(colData(rse_gene_SRP115956))) ])) ## sra_attribute.age sra_attribute.alcohol sra_attribute.gender ## Min. :19.00 Length:263 female:122 ## 1st Qu.:38.00 Class :character male :141 ## Median :46.00 Mode :character ## Mean :46.63 ## 3rd Qu.:55.00 ## Max. :82.00 ## sra_attribute.ph sra_attribute.phenotype sra_attribute.pmi ## Length:263 CTRL:122 Length:263 ## Class :character MDD :141 Class :character ## Mode :character Mode :character ## ## ## ## sra_attribute.tissue ## Length:263 ## Class :character ## Mode :character ## ## ## 3.1 Variable categórica. Ahora que los datos son manejables, crearemos una variable categórica para dividir dos grupos de edad. # Separar los grupos de edad rse_gene_SRP115956$age_group &lt;- factor(ifelse(rse_gene_SRP115956$sra_attribute.age&lt; 56, &quot;young&quot;, &quot;old&quot;)) # Encontrar diferencias table(rse_gene_SRP115956$age_group) ## ## old young ## 61 202 "],["filtrado-de-los-datos..html", "4 Filtrado de los datos.", " 4 Filtrado de los datos. Calcularemos la proporción de lecturas asignadas a genes. # Proporción de lecturas asignadas a genes. rse_gene_SRP115956$assigned_gene_prop &lt;- rse_gene_SRP115956$recount_qc.gene_fc_count_all.assigned/rse_gene_SRP115956$recount_qc.gene_fc_count_all.total Y observamos las estadísticas de la variable categórica age&lt;-group # Resumen por grupo de edad. with(colData(rse_gene_SRP115956), tapply(assigned_gene_prop, age_group, summary)) ## $old ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.3161 0.3710 0.3989 0.4115 0.4469 0.5841 ## ## $young ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.2915 0.3688 0.3980 0.4043 0.4307 0.5610 Además, resulta útil observar de manera gráfica cómo se comporta la medida de lecturas asignadas a genes. # Visualización. with(colData(rse_gene_SRP115956), plot(assigned_gene_prop, sra_attribute.rin)) abline(v=0.35,col=&quot;deepskyblue4&quot;, lwd=4, lty = &quot;solid&quot;) hist(rse_gene_SRP115956$assigned_gene_prop, col=&quot;gray58&quot;) abline(v=0.35,col=&quot;darkorange1&quot;, lwd=7, lty = &quot;dashed&quot;) Después de haber observado un poco el comportamiento de los datos, podemos elegir un valor de corte. table(rse_gene_SRP115956$assigned_gene_prop &lt; 0.35) ## ## FALSE TRUE ## 233 30 Para este estudio, eliminaremos las muestras que tengan una proporción menor a 0.35 # Pero antes podemos guardar el objeto original, por si posteriormente fuera necesario. rse_gene_SRP115956_unfiltered &lt;- rse_gene_SRP115956 # Eliminar los genes con proporciones bajas. rse_gene_SRP115956 &lt;- rse_gene_SRP115956[, rse_gene_SRP115956$assigned_gene_prop &gt; 0.35] Ahora calcularemos los niveles medios de expresión de los genes en las muestras y eliminaremos los genes con niveles muy bajos, que no son significativos. gene_means &lt;- rowMeans(assay(rse_gene_SRP115956, &quot;counts&quot;)) summary(gene_means) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0 0.2 3.6 397.8 74.8 857870.3 # Eliminamos genes poco significativos (abajo del primer cuartil). rse_gene_SRP115956 &lt;- rse_gene_SRP115956[gene_means &gt; 0.2, ] # Dimensiones finales. dim (rse_gene_SRP115956) ## [1] 46977 233 Las dimensiones originales del objeto eran de 63,856 genes y 263 muestras. Así que después de filtrar los datos eliminamos 16,789 genes y 30 muestras y conservamos el 73.57 de los genes. # Porcentaje de genes retenidos. round(nrow(rse_gene_SRP115956) / nrow(rse_gene_SRP115956_unfiltered) * 100, 2) ## [1] 73.57 "],["normalización..html", "5 Normalización.", " 5 Normalización. Para reducir la incidencia de falsos positivos normalizaremos los datos asumiendo que la mayoría de los genes no se están expresando diferencialmente. # Creación del objetoque nos permite hacer la normalización. dge &lt;- DGEList( counts = assay(rse_gene_SRP115956, &quot;counts&quot;), genes = rowData(rse_gene_SRP115956) ) dge &lt;- calcNormFactors(dge) "],["expresión-diferencial..html", "6 Expresión diferencial. 6.1 Modelo estadístico.", " 6 Expresión diferencial. Para visualizar un poco los datos, se graficaron boxplots de algunas de los diferentes atributos, como el fenotipo y el grupo de edad, para analizar la diferencia entre la expresión de las muestras bajo distintas condiciones. Sin embargo, no se observaron diferencias muy significativas con este tipo de gráficas. # Boxplot por grupo de edad ggplot(as.data.frame(colData(rse_gene_SRP115956)), aes(y = assigned_gene_prop, x = age_group)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Age Group&quot;) # Boxplot por fenotipo ggplot(as.data.frame(colData(rse_gene_SRP115956)), aes(y = assigned_gene_prop, x = rse_gene_SRP115956$sra_attribute.phenotype)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Phenotype&quot;) # Boxplot por género ggplot(as.data.frame(colData(rse_gene_SRP115956)), aes(y = assigned_gene_prop, x = rse_gene_SRP115956$sra_attribute.gender)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Gender&quot;) 6.1 Modelo estadístico. El modelo estadístico se generó a partir de las tres variables anteriormente mencionadas. mod &lt;- model.matrix(~ age_group + sra_attribute.gender + sra_attribute.phenotype + assigned_gene_prop, data = colData(rse_gene_SRP115956)) colnames(mod) ## [1] &quot;(Intercept)&quot; &quot;age_groupyoung&quot; ## [3] &quot;sra_attribute.gendermale&quot; &quot;sra_attribute.phenotypeMDD&quot; ## [5] &quot;assigned_gene_prop&quot; Convertimos las lecturas de las cuentas a logaritmo base 2 de las cuentas por millón. Posteriormente estimamos la relación varianza-promedio. vGene &lt;- voom(dge, mod, plot = TRUE) Ajustamos los datos evaluando de acuerdo al atributo phenotype y podemos visualizar los datos estadísticos. # Ajuste de los datos eb_results &lt;- eBayes(lmFit(vGene)) plotMA(eb_results, coef = 4, col = &quot;steelblue&quot;) de_results &lt;- topTable( eb_results, coef = 2, number = nrow(rse_gene_SRP115956), sort.by = &quot;none&quot; ) dim(de_results) ## [1] 46977 16 volcanoplot(eb_results, coef = 4, highlight = 5, names = de_results$gene_name, col = &quot;steelblue&quot;, hl.col=&quot;hotpink4&quot;) En este último plot podemos observar los cinco genes con mayor expresión cuando el diagnóstico es Major Depressive Disorder están alejados de los demás, lo que nos da un indicativo de la expresión diferencial. Siguiendo con el análisis, se observó si se generaban clusters de expresión diferencial dependiendo de la categoría de las muestras. Esto se consiguió a partir de gráficas MDS en las que visualizamos la agrupación de muestras de acuerdo a los valores y los niveles de expresión de las variables elegidas.De igual manera, se graficaron los atributos grupo de edad, fenotipo y género. ## Crear un data frame con las variables de nuestro interés y nombrarlas más amigablemente. df &lt;- as.data.frame(colData(rse_gene_SRP115956)[, c(&quot;age_group&quot;, &quot;sra_attribute.gender&quot;, &quot;sra_attribute.phenotype&quot;)]) colnames(df) &lt;- c(&quot;AgeGroup&quot;, &quot;Gender&quot;, &quot;Phenotype&quot;) # MDS por edad age.group &lt;- df$AgeGroup levels(age.group) &lt;- c(&quot;turquoise3&quot;, &quot;deeppink4&quot;) age.group &lt;- as.character(age.group) plotMDS(vGene$E, labels = df$AgeGroup, col = age.group) # MDS por fenotipo phenotype.group &lt;- df$Phenotype levels(phenotype.group) &lt;- c(&quot;dodgerblue4&quot;, &quot;darkgoldenrod1&quot;) phenotype.group &lt;- as.character(phenotype.group) plotMDS(vGene$E, labels = df$Phenotype, col = phenotype.group) # MDS por género. gender.group &lt;- df$Gender levels(gender.group) &lt;- c(&quot;violetred4&quot;, &quot;tan1&quot;) gender.group &lt;- as.character(gender.group) plotMDS(vGene$E, labels = df$Gender, col = gender.group) La más informativa de estas gráficas es la que analiza la categoría de sexo. Podemos ver dos clusters en el caso de hombres y mujeres vemos que hay una gran diferencia en los genes diferencialmente expresados. Por último podemos observar en una gráfica de tipo heatmap la expresión de los genes a lo largo de los atributos que se consideraron para generar el modelo. # Nos quedamos con los genes de más significativos. exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 30, ] # Cambiar los identificadores por los nombres de los genes. nombres &lt;- rownames(de_results) rownames(exprs_heatmap) &lt;- de_results$gene_name[match(rownames(exprs_heatmap), nombres)] pheatmap( exprs_heatmap, cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE, annotation_col = df ) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
